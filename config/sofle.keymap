/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

// NOTE: Ensure in sofle.conf: CONFIG_ZMK_POINTING=y
// Adjust scroll step if desired (default is 10)
#define ZMK_POINTING_DEFAULT_SCRL_VAL 80

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/ext_power.h>
// #include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>


#define BASE 0
#define LOWER 1
#define RAISE 2
#define ADJUST 3

/ {

    // Activate ADJUST layer by pressing raise and lower
    conditional_layers {
        compatible = "zmk,conditional-layers";
        adjust_layer {
            if-layers = <LOWER RAISE>;
            then-layer = <ADJUST>;
        };
    };

    // --- Behaviors -----------------------------------------------------------------
      // One behavior per direction, each directly calls &msc
      enc_scrl_cw: enc_scrl_cw {
        compatible = "zmk,behavior-sensor-rotate";
        bindings = <&msc SCRL_UP>;
      };
    
      enc_scrl_ccw: enc_scrl_ccw {
        compatible = "zmk,behavior-sensor-rotate";
        bindings = <&msc SCRL_DOWN>;
      };

    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "Input";
// -----------------------------------------------------------------------------------------------------------
// |  ESC  |  RAISE | home |  RET |  end | SCREEN |                 |  -   |  7    | BKSPC |  (   |   )   |   =   |
// |  TAB  |  Q  |  W  |  E   |  R   |  T   |                       |  Y   |  U    |  I    |  O   |   P   | DEL   |
// |  CAPS |  A  |  S  |  D   |  F   |  G   |                       |  H   |  J    |  K    |  L   |   /   |   '   |
// | SHIFT |  Z  |  X  |  C   |  V   |  B   |  F5  |  |           |  N   |  M    |  ,    |  .   |   ;   | TERMINAL |
//               | LOWER| ALT  | LGUI | SHIFT|  LOWER |  | LCTRL | SPACE| calc  | vol down   | vol up  |
            bindings = <
&kp ESC &mo RAISE &kp HOME   &kp RET   &kp END    &kp LG(LS(S))               &kp MINUS &kp N7    &kp BSPC    &kp LPAR   &kp RPAR   &kp EQUAL
&kp TAB   &kp Q  &kp W    &kp E    &kp R     &kp T                            &kp Y  &kp U     &kp I     &kp O    &kp P    &kp DEL
&kp CAPS   &kp A  &kp S    &kp D    &kp F     &kp G                           &kp H  &kp J     &kp K     &kp L    &kp FSLH &kp SQT
&kp LCTRL &kp Z  &kp X    &kp C    &kp V     &kp B      &kp F5                &kp N  &kp M     &kp COMMA &kp DOT  &kp SEMI &kp LC(LA(T))
                 &tog LOWER &kp LALT &kp LGUI &kp LSHIFT  &mo LOWER    &kp LCTRL  &kp SPACE  &kp LC(LA(C)) &kp K_VOL_DN  &kp K_VOL_UP
                                                                      &tog RAISE     &mkp MB2  &kp LGUI &mkp MB3  &mkp MB1
            >;

            // Encoder: real mouse scroll
            sensor-bindings = <&enc_scrl_cw>, <&enc_scrl_ccw>;   // one tuple per sensor


        };

        lower_layer {
            label = "#-Symb";
// TODO: Some binds are waiting for shifted keycode support.
// ------------------------------------------------------------------------------------------------------------
// |    ~  |  F1 |  F2 |  F3  |  F4  |  F5  |                     |  +   |  F7   |  F8   |  F9  |  F10  |  F11  |
// |   |   |  !  |  @  |  #   |  $   |  %   |                     |  -   |  7    |  8    |  9   |   0   |  F12  |
// |  CUT  | COPY| PASTE |  MK3 |  MK2 | MK1  |                   |  *   |  4    |  5    |  6   |   )   |   |   |
// |   {   |  }  |  [  |  ]   | pg dn | pg up |        |  |       |  /   |  1    |  2    |  3   |   ;   |   \   |
//        | TOG LOWER | DOWN  |  GUI  | SHIFT |        |  |       |  space  |  0    |  ,    |  .   |
            bindings = <
&kp TILDE  &kp F1    &kp F2    &kp F3      &kp F4    &kp F5                       &kp KP_PLUS     &kp F7   &kp F8  &kp F9  &kp F10   &kp F11
&kp PIPE   &kp EXCL  &kp AT    &kp HASH    &kp DLLR  &kp PRCNT                     &kp KP_MINUS    &kp N7   &kp N8  &kp N9  &kp N0    &kp F12
&kp LC(X)   &kp LC(C) &kp LC(V)  &mkp MB3 &mkp MB2  &mkp MB1                 &kp KP_MULTIPLY &kp N4   &kp N5  &kp N6  &kp RPAR  &kp PIPE
&kp LBRC &kp RBRC &kp LBKT  &kp RBKT &kp LC(PG_UP)  &kp LC(PG_DN) &kp F5         &kp KP_DIVIDE   &kp N1   &kp N2  &kp N3  &kp COLON &kp BSLH
         &tog LOWER     &kp LALT   &kp LGUI    &kp LSHIFT     &trans                  &kp LCTRL  &kp SPACE       &kp N0   &kp COMMA    &kp DOT
                                                                         &kp RET   &kp RIGHT  &kp UP &kp LEFT  &kp DOWN
            >;

            // Encoder: volume down/up via keys
            sensor-bindings = <&inc_dec_kp K_VOL_DN K_VOL_UP>;

        };

        raise_layer {
            label = "NAVS";
// ------------------------------------------------------------------------------------------------------------
// |   ESC |  1   |  2   |   3   |   4   |  5   |                | HOME | END   | BRWSER | FOLDER | SETTINGS |   N6  |
// |   TAB |  Q   |  W   |   E   |   R   |  T   |                | PGUP | LC(W) |   ^   | LC(T) | LC(LS(T)) |   N7  |
// | SHIFT |  A   |  S   |   D   |   F   |  G   |                | PGDN |  PASTE| COPY  |  CUT  |  DEL  | BKSPC |
// |  CTRL |  Z   |  X   |   C   |   V   |  B   |  F5  |   |     | tab- | tab+  |       |      | bright-|bright+ |
//                |  Y   |   U   |   I   | SPACE | LOWER|  | LCTRL | F5 | LSHIFT |vol-   |vol+  |
            bindings = <
&kp ESC     &kp N1       &kp N2     &kp N3    &kp N4   &kp N5                  &kp HOME      &kp END     &kp LG(N1)  &kp LG(N2)   &kp LG(N3)     &kp LG(N4)
&kp TAB     &kp Q        &kp W      &kp E     &kp R    &kp T                   &kp PG_UP     &kp LC(W)   &kp UP      &kp LC(T)    &kp LC(LS(T))  &kp LG(N5)
&kp LSHIFT  &kp A        &kp S      &kp D     &kp F    &kp G                   &kp PG_DN     &kp LC(V)    &kp LC(C)  &kp LC(X)    &kp DEL        &kp BSPC
&kp LCTRL   &kp Z        &kp X      &kp C     &kp V    &kp B      &kp F5       &kp LC(PG_UP) &kp LC(PG_DN) &trans    &trans       &kp C_BRI_DN   &kp C_BRI_UP
         &kp Y       &kp U       &kp I       &kp SPACE        &mo LOWER        &kp LCTRL  &kp F5    &kp LSHIFT    &kp K_VOL_DN  &kp K_VOL_UP
                                                                                      &tog RAISE &mkp MB2  &kp LGUI &mkp MB3  &mkp MB1
            >;

            // Encoder: page down/up via keys
            sensor-bindings = <&inc_dec_kp PG_DN PG_UP>;
        };

        adjust_layer {
// ----------------------------------------------------------------------------------------------------------------------------
// | BTCLR  |  BT1    |  BT2    |   BT3   |   BT4   |   BT5   |                  | BTCLR  |  BT1    |  BT2    |   BT3   |   BT4   |   BT5   |
// | EXTPWR | RGB_HUD | RGB_HUI | RGB_SAD | RGB_SAI | RGB_EFF |                  | BT TOG |      |       |      |       |       |
// |        | RGB_BRD | RGB_BRI |         |         |         |                  |      |      |       |      |       |       |
// |        |         |         |         |         |         | RGB_TOG | |      |      |      |       |      |       |       |
//                    |         |         |         |         |         | |      |      |      |       |      |
            label = "Settings";
            bindings = <
&kp ESC     &kp HOME     &kp END    &kp PG_UP  &kp PG_DN &kp DEL                         &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4
&kp ESC     &kp N1       &kp N2     &kp N3     &kp N4    &kp N5                         &out OUT_TOG &none &none &none &none &none
&kp ESC     &kp N6       &kp N7     &kp N8     &kp N9    &kp N0                         &none &none &none &none &none &none
&kp TAB     &kp H        &kp J      &kp K      &kp L     &kp O     &kp F1                &none &none &none &none &none &none
            &kp F2        &kp F9      &none     &kp F5    &none                          &none  &none &none &none &none
                                                                                        &kp A      &kp B  &kp C &kp D  &kp E
           >;

            // Encoder: two separate tuples
            sensor-bindings = <&inc_dec_kp DOWN UP>, <&inc_dec_kp PG_UP PG_DN>;
        };

    };
};
